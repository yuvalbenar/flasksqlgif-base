name: Deploy Flask App to EC2

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      # Generate SSH key pair for EC2 instance
      - name: Generate SSH Key
        run: |
          KEY_NAME="MyDynamicKey-${{ github.run_number }}"
          ssh-keygen -t rsa -b 4096 -f ~/.ssh/$KEY_NAME -N ""
          PUBLIC_KEY=$(cat ~/.ssh/$KEY_NAME.pub)
          echo "PUBLIC_KEY=$PUBLIC_KEY" >> $GITHUB_ENV

      # Import the SSH key pair to AWS
      - name: Import SSH Key to AWS
        run: |
          aws ec2 import-key-pair --key-name $KEY_NAME --public-key-material "$PUBLIC_KEY" --region ${{ secrets.AWS_DEFAULT_REGION }}

      # Launch EC2 instance with the generated key pair
      - name: Launch EC2 Instance
        run: |
          INSTANCE_ID=$(aws ec2 run-instances \
            --region ${{ secrets.AWS_DEFAULT_REGION }} \
            --image-id ami-01816d07b1128cd2d \
            --instance-type t2.micro \
            --key-name $KEY_NAME \
            --security-group-ids sg-0a1c36e26e49cd294 \
            --iam-instance-profile Name=access-to-s3 \
            --user-data '#!/bin/bash
            yum update -y
            yum install -y yum-utils device-mapper-persistent-data lvm2
            amazon-linux-extras enable docker
            yum install -y docker
            systemctl start docker
            systemctl enable docker
            usermod -aG docker ec2-user
            newgrp docker
            DOCKER_COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r ".tag_name")
            curl -L "https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose' \
            --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=project}]' \
            --query 'Instances[0].InstanceId' \
            --output text)

          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
          aws ec2 wait instance-running --instance-ids $INSTANCE_ID --region ${{ secrets.AWS_DEFAULT_REGION }}

      # Retrieve the public IP address of the EC2 instance
      - name: Get EC2 Public IP
        run: |
          PUBLIC_IP=$(aws ec2 describe-instances \
            --region ${{ secrets.AWS_DEFAULT_REGION }} \
            --instance-ids "$INSTANCE_ID" \
            --query 'Reservations[0].Instances[0].PublicIpAddress' \
            --output text)

          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

      # Deploy to EC2 instance via SSH trolololo
      - name: Deploy Flask App to EC2
        run: |
          scp -i ~/.ssh/${{ env.KEY_NAME }} -o StrictHostKeyChecking=no -r ./project-files ec2-user@${{ env.PUBLIC_IP }}:/home/ec2-user/
          ssh -i ~/.ssh/${{ env.KEY_NAME }} -o StrictHostKeyChecking=no ec2-user@${{ env.PUBLIC_IP }} << EOF
            cd /home/ec2-user/project-files
            docker-compose up -d
          EOF
